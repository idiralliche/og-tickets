# This file is only used in development, localy, to run the backend service in a container.

# Anchor definition for common environment variables
x-common-env: &common-env
    ENV: dev
    DEBUG: true
    EMAIL_USE_TLS: true
    EMAIL_HOST_USER: noreply@ogtickets.space
    EMAIL_PORT: 587
    DEFAULT_FROM_EMAIL: "Ne pas r√©pondre - comptes utilisateur <noreply@ogtickets.space>"
    FRONTEND_DOMAIN: localhost:8080
    USERS_ACTIVATION_ROUTE: "acces/ouverture"
    USERS_PASSWORD_RESET_ROUTE: "acces/reprise"
    REDIS_URL: redis://redis:6379/0
    SECRET_KEY: ${SECRET_KEY}
    DB_USER: ${DB_USER}
    DB_PASSWORD: ${DB_PASSWORD}
    DB_NAME: ${DB_NAME}
    DB_HOST: ${DB_HOST}
    ALLOWED_HOSTS: ${ALLOWED_HOSTS}
    CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
    SENTRY_DSN: ${SENTRY_DSN}
    EMAIL_HOST: ${EMAIL_HOST}
    EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}

# Define common volumes for secrets
x-common-volumes: &common-volumes
  - ./secrets/secret_key.txt:/run/secrets/secret_key:ro
  - ./secrets/db_user.txt:/run/secrets/db_user:ro
  - ./secrets/db_password.txt:/run/secrets/db_password:ro
  - ./secrets/db_name.txt:/run/secrets/db_name:ro
  - ./secrets/db_host.txt:/run/secrets/db_host:ro
  - ./secrets/allowed_hosts.txt:/run/secrets/allowed_hosts:ro
  - ./secrets/cors_allowed_origins.txt:/run/secrets/cors_allowed_origins:ro
  - ./secrets/sentry_dsn.txt:/run/secrets/sentry_dsn:ro
  - ./secrets/stripe_secret_key.txt:/run/secrets/stripe_secret_key:ro
  - ./secrets/email_host.txt:/run/secrets/email_host:ro
  - ./secrets/email_host_password.txt:/run/secrets/email_host_password:ro

services:
  db:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - ogtickets_nw

  redis:
    image: redis:7-alpine
    restart: always
    networks:
      - ogtickets_nw

  backend:
    image: tixidest/ogtickets-backend:latest
    ports:
      - "8000:8000"
    restart: unless-stopped
    environment:
      <<: *common-env
    volumes: *common-volumes
    command: ["django"]
    depends_on:
      - db
      - redis
    networks:
      - ogtickets_nw

  celery_worker:
    image: tixidest/ogtickets-backend:latest
    environment:
      <<: *common-env
    volumes: *common-volumes
    command: ["celery"]
    depends_on:
      - redis
      - db
    networks:
      - ogtickets_nw

networks:
  ogtickets_nw:
    external: true

volumes:
  postgres_data:
