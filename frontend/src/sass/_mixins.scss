@use 'sass:map';
@use 'sass:list';
@use 'variables';

// Mixin for button styles
@mixin button-styles($bg-color, $hover-color) {
  background-color: $bg-color;
  &:hover {
    background-color: $hover-color;
  }
}

// Mixin for flexbox
@mixin flexbox-basics($direction: column, $justify: null, $align: null) {
  display: flex;
  flex-direction: $direction;
  @if $justify {
    justify-content: $justify;
  }
  @if $align {
    align-items: $align;
  }
}

@mixin flex-column {
  @include flexbox-basics();
}

@mixin list-page {
  @include flex-column;
  padding: 10px;
  margin: 0 auto;
  max-width: 90%;
}

// Mixin for square blocks
@mixin square($value) {
  width: $value;
  height: $value;
}

// Mixin for media queries
// Usage:
// @include media-min('phone-up') {
//   /* styles */
// }
// @include media-max('phone-down') {
//   /* styles */
// }
// @include media-between('phone-up', 'tablet-down') {
//   /* styles */
// }
// Breakpoints
$breakpoints: (
  'phone-up': 320px,
  'phone-down': 500px,
  'tablet-up': 768px,
  'tablet-down': 900px,
  'desktop-up': 1024px,
  'desktop-down': 1280px,
  'widescreen-up': 1440px,
);

/* from… */
@mixin media-min($_key) {
  @media screen and (min-width: map.get($breakpoints, $_key)) {
    @content;
  }
}

/* to… */
@mixin media-max($_key) {
  @media screen and (max-width: (map.get($breakpoints, $_key) - 1)) {
    @content;
  }
}

/* from… to… */
@mixin media-between($_keymin, $_keymax) {
  @media screen and (min-width: map.get($breakpoints, $_keymin)) and (max-width: (map.get($breakpoints, $_keymax) - 1)) {
    @content;
  }
}
